Program.Sub.Preflight.Start
v.Global.sLog.Declare
v.Global.sFile.Declare
f.Intrinsic.Control.CallSub("Check_And_Create_Custom_Folder")
Program.Sub.Preflight.End

Program.Sub.Main.Start
'BN, Mar 2020
'This script fires on the post online update hook. It will get all the records generated from the GUI, which is from Job_Detail and save to a custom table to keep as original. 
'This is because these original Job_Detail may be overwritten later (User changed, program changed, date changed) by other program, for example, by using the  Shop Floor Control > Transactions > Edit Work Order Detail
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.dYesterday.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	v.Local.iCnt.Declare
	v.Local.dDateSequence.Declare
	v.Local.dDATE_LAST_CHG.Declare
	
	f.ODBC.Connection!conx.OpenCompanyConnection(300)
	
	f.Intrinsic.String.Build("Select Job,Suffix,Seq,Date_Sequence,Sequence_Key,Empl,Hours_Worked,DATE_LAST_CHG,Convert(TIME_LAST_CHG,SQL_Char) as TIME_LAST_CHG,LAST_CHG_BY,LAST_CHG_PROG from v_Job_Detail  where last_chg_Prog = 'JB032A' and DATE_LAST_CHG = '{0}'",v.Ambient.Date.PervasiveDate,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("NewTrans","conx",v.Local.sSQL,True)
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.NewTrans.RowCount--,1)
		v.Local.dDateSequence.Set(v.DataTable.NewTrans(v.Local.iCnt).Date_Sequence!FieldValString)
		v.Local.dDATE_LAST_CHG.Set(v.DataTable.NewTrans(v.Local.iCnt).DATE_LAST_CHG!FieldValString)
		f.Intrinsic.String.Build("Select Job,Suffix from GCG_5900_Original where Job = '{0}' and Suffix = '{1}' and Seq = '{2}' and Date_Sequence = '{3}' and Sequence_Key = '{4}'",v.DataTable.NewTrans(v.Local.iCnt).Job!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Suffix!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Seq!FieldValString,v.Local.dDateSequence.PervasiveDate,v.DataTable.NewTrans(v.Local.iCnt).Sequence_Key!FieldValString,v.Local.sSQL)
		f.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
		f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
			'Insert
			f.Intrinsic.String.Build("Insert into GCG_5900_Original (Job,Suffix,Seq,Date_Sequence,Sequence_Key,Empl,Hours_Worked,DATE_LAST_CHG,TIME_LAST_CHG,LAST_CHG_BY,LAST_CHG_PROG) values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}')",v.DataTable.NewTrans(v.Local.iCnt).Job!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Suffix!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Seq!FieldValString,v.Local.dDateSequence.PervasiveDate,v.DataTable.NewTrans(v.Local.iCnt).Sequence_Key!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Empl!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Hours_Worked!FieldValString,v.Local.dDATE_LAST_CHG.PervasiveDate,v.DataTable.NewTrans(v.Local.iCnt).TIME_LAST_CHG!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).LAST_CHG_BY!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).LAST_CHG_PROG!FieldValString,v.Local.sSQL)
		f.Intrinsic.Control.Else
			'Update
			f.Intrinsic.String.Build("Update GCG_5900_Original  SET Empl = '{5}',Hours_Worked = '{6}',DATE_LAST_CHG = '{7}',TIME_LAST_CHG = '{8}',LAST_CHG_BY = '{9}',LAST_CHG_PROG = '{10}' Where  Job = '{0}' and Suffix = '{1}' and Seq = '{2}' and Date_Sequence = '{3}' and Sequence_Key = '{4}'",v.DataTable.NewTrans(v.Local.iCnt).Job!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Suffix!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Seq!FieldValString,v.Local.dDateSequence.PervasiveDate,v.DataTable.NewTrans(v.Local.iCnt).Sequence_Key!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Empl!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).Hours_Worked!FieldValString,v.Local.dDATE_LAST_CHG.PervasiveDate,v.DataTable.NewTrans(v.Local.iCnt).TIME_LAST_CHG!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).LAST_CHG_BY!FieldValString,v.DataTable.NewTrans(v.Local.iCnt).LAST_CHG_PROG!FieldValString,v.Local.sSQL)			
		f.Intrinsic.Control.EndIf
		f.ODBC.Connection!conx.Execute(v.Local.sSQL)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	F.ODBC.Connection!conx.close
	f.Intrinsic.Control.CallSub("Unload")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("From Online Update Project: 5900 GCG_5900_Post_OnlineUpdate.g2u {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,V.Local.sError)
	f.Intrinsic.Control.CallSub("Write_Log","sError",v.Local.sError)
F.Intrinsic.Control.EndTry

Program.Sub.Main.End

Program.Sub.Write_Log.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.bEx.Declare
	v.Local.sCurrentContent.Declare
	v.Local.sFile.Declare

	f.Intrinsic.Control.If(v.Args.sError.Trim,<>,"")
		f.Intrinsic.String.Build("{0}{1}{2}",v.Global.sLog,v.Ambient.NewLine,v.Args.sError,v.Global.sLog)
	f.Intrinsic.Control.EndIf
	'Check file and write log, appending line to log
	f.Intrinsic.File.Exists(v.Global.sFile,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Intrinsic.File.File2String(v.Global.sFile,v.Local.sCurrentContent)
		f.Intrinsic.String.Build("{0}{1}{1}{2}:{1}{3}",v.Local.sCurrentContent,v.Ambient.NewLine,v.Ambient.Now,v.Global.sLog,v.Global.sLog)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.File.String2File(v.Global.sFile,v.Global.sLog)		

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: GCG_5900_Job_Steps.g2u {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	f.Intrinsic.String.Build("{0}{1}{2}",v.Global.sLog,v.Ambient.NewLine,v.Local.sError,v.Global.sLog)
	f.Intrinsic.String.Build("{0}\Custom\5900\{1}\GAB Log\{2}_WriteLogError.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Ambient.Now.FormatYYYYMMDDHHNNSS,v.Local.sFile)
	f.Intrinsic.File.String2File(v.Local.sFile,v.Global.sLog)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Write_Log.End

Program.Sub.Check_And_Create_Custom_Folder.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bExist.Declare
	v.Local.sFile.Declare
	v.Local.sDir.Declare
	
	f.Intrinsic.String.Build("{0}\Custom",v.Caller.GlobalDir,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("{0}\Custom\5900",v.Caller.GlobalDir,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("{0}\Custom\5900\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.String.Build("{0}\Custom\5900\{1}\GAB Log",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf		
	
	f.Intrinsic.String.Build("{0}\Custom\5900\{1}\GAB Log\{2}.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Ambient.Date.FormatYYYYMMDD,v.Global.sFile)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: GCG_5900_Job_Steps.g2u {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	f.Intrinsic.String.Build("{0}{1}{2}",v.Global.sLog,v.Ambient.NewLine,v.Local.sError,v.Global.sLog)
	f.Intrinsic.String.Build("{0}\{1}_{2}_Custom5900FolderError.txt",v.Caller.FilesDir,v.Caller.CompanyCode,v.Ambient.Now.FormatYYYYMMDDHHNNSS,v.Local.sFile)
	f.Intrinsic.File.String2File(v.Local.sFile,v.Global.sLog)
	f.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.Check_And_Create_Custom_Folder.End

Program.Sub.UnLoad.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	
	f.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	f.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.UnLoad.End
